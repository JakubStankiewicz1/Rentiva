# Production Configuration for Render.com
spring.application.name=rentiva-backend

# Database Configuration - konwersja DATABASE_URL na właściwy format JDBC
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/rentiva}
spring.datasource.driver-class-name=org.postgresql.Driver

# Fallback jeśli DATABASE_URL nie jest ustawione
spring.datasource.username=${POSTGRES_USER:rentiva_user}
spring.datasource.password=${POSTGRES_PASSWORD:password}

# JPA/Hibernate Properties for PostgreSQL
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.connection.characterEncoding=utf8
spring.jpa.properties.hibernate.connection.CharSet=utf8
spring.jpa.properties.hibernate.connection.useUnicode=true

# Server Configuration
server.port=${PORT:8080}

# CORS Configuration for production
spring.web.cors.allowed-origins=${CORS_ORIGINS:http://localhost:3000}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Actuator endpoints
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true

# Logging
logging.level.com.example.backend=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type=ERROR
